<?php

/**
 * This is the bootstrap entry point for all requests.
 * Requires that all requests be routed to this file. (ie. in an .htaccess file).
 * 
 * Example routes:
 * 
 * Calls defaultAction in the controller:
 * {
 *   "url": 		"/api",
 *   "controller": 	"MyWebService"
 * }
 * 
 * Calls a specific action in the router:
 * {
 *   "url":			"/api/authorize",
 *   "controller":	"MyWebService",
 *   "action":		"getOAuth2Token"
 * }
 * 
 * Calls a specific action in the router and loads a view
 * {
 *   "url":			"/users",
 *   "controller":	"MyController",
 *   "action":		"usersAction",
 *   "view":        "users.html"
 * }
 * 
 * Just a view, no router:
 * {
 *   "url":         "/blah",
 *   "view":        "blah.html"
 * }
 * 
 * Wildcard route:
 * {
 *   "url":			"/api/docs/*",
 *   "view":		"/docs/*",
 *   "index":		["index.html","index.php"]
 * }
 */

require_once('../../vendor/autoload.php');

function show404($route) {
	header("HTTP/1.0 404 Not Found");
	echo "<h1>404 Not Found.</h1>";
	echo "The page that you have requested could not be found.";
	echo "<h2>Doh! Probably a bad route. Check routes.json</h2>";
	echo "<h3>Requested route: $route</h3>";
}

// *** Parse the request URL and load the appropriate page ***
if (is_file(ROUTES_FILE)) {
	$pages = json_decode(file_get_contents(ROUTES_FILE), true);
	if (!$pages) {
		echo "<h1>Error: Invalid routes file.</h1>";
		echo "The routes.json file could not be parsed.";
		exit();
	}

	$reqUrl = $_SERVER['REQUEST_URI'];
	$query = '?' . $_SERVER['QUERY_STRING'];
	$reqUrl = str_replace($query, '', $reqUrl);
	if ($reqUrl != '/' && substr($reqUrl, -1) == '/') {
		$reqUrl = substr($reqUrl, 0, strlen($reqUrl) - 1);
	}

	foreach ($pages as $page) {
		
		$paramCount = 0;
		$urlPattern = $page['url'];
		if (strstr($urlPattern, '%')) {
			$paramCount = substr_count($urlPattern, '%');
			$urlPattern = substr($urlPattern, 0, strpos($urlPattern, '%') - 1);
		}
		
		if ($paramCount > 0 && substr_count($reqUrl, '/') < $paramCount) {
			continue;
		}
		
		$params = array();
		$baseReqUrl = $reqUrl;
		for ($i = 0; $i <= $paramCount - 1; $i++) {
			$params[] = substr($baseReqUrl, strrpos($baseReqUrl, '/') + 1);
			$baseReqUrl = substr($baseReqUrl, 0, strrpos($baseReqUrl, '/'));
		}
		$params = array_reverse($params);
		
		//$test1 = substr($reqUrl, 0, strlen($urlPattern));
		$test2 = substr($urlPattern, 0, -2);
		
		if (substr($urlPattern, -2) == '/*') {
			//$match = substr($reqUrl, 0, strlen($urlPattern)) && (substr($urlPattern, -1) == '*') == $urlPattern;
			$match = $reqUrl == substr($urlPattern, 0, -2);
		}
		else {
			$match = $reqUrl == $urlPattern;
		}
		
		if ($match || ($paramCount > 0 && $urlPattern == $baseReqUrl)) {
			if (!empty($page['redirect'])) {
				header('Location:' . $page['redirect']);
				exit();
			}

			$controller = null;
			if (!empty($page['controller'])) {
				if (!is_file(CONTROLLERS_DIR . '/' . $page['controller'] . '.php')) {
					die("Doh, bad route! Controller " . CONTROLLERS_DIR . "/{$page['controller']} for url '{$page['url']}' could not be found.");
				}
				
				$className = '';
				if (strstr($page['controller'], '/')) {
					//$className = str_replace( '.php', '', substr( $page[ 'controller' ], strrpos( $page[ 'controller' ], '/' ) + 1 ) );
					$className = substr($page['controller'], strrpos($page['controller'], '/') + 1);
				}
				else {
					//$className = str_replace( '.php', '', $page[ 'controller' ] );
					$className = $page['controller'];
				}

				if (isset($page['view'])) {
					$controller = new $className($page['view']);
				}
				else {
					// The controller does not have a view (most likely an API controler)
					$controller = new $className();
				}

				if (isset($page['action']) && method_exists($controller, $page['action'])) {
					call_user_func_array(array($controller, $page['action']), $params);
				}
				else {
					call_user_func_array(array($controller, 'defaultAction'), $params);
				}
			}
			elseif (!empty($page['view'])) {
				// TODO: Without a controller, no templating is done... right?
				if (substr($page['view'], -1) == '*') {
					$path = substr($reqUrl, strlen($urlPattern) - 2);
					$path = substr($page['view'], 0, -2) . $path;
					$fullPath = TWIG_TEMPLATE_DIR . $path;
					
					// TODO: If the req url is a path without a filename then this doesn't load index or whatever.
					//       ^ is this still true?
					$file = basename($path);
					
					// If the file exists

					if (!is_dir($fullPath) && file_exists($fullPath)) {
						echo(file_get_contents($fullPath));
					}
					elseif (is_dir($fullPath)) {
						// Look for an index file
						$found = false;
						foreach ($page['index'] as $index) {
							if (file_exists("$fullPath/$index")) {
								$found = true;
								echo(file_get_contents("$fullPath/$index"));
								break;
							}
						}
						
						if (!$found) {
							show404($reqUrl);
						}
					}
					else {
						show404($reqUrl);
					}
				}
				else {
					echo(file_get_contents(TWIG_TEMPLATE_DIR . $page['view']));
				}
			}

			// Finished!
			exit();
		}
	}

	// If we got here then the page is not defined in pages.json
	show404($reqUrl);
	exit();
}
else {
	die("Site Error: Missing " . ROUTES_FILE);
}